version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    restart: always
    user: "1000:1000"
    depends_on:
      - postgres
      - redis
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      CHROMA_DB_PATH: /app/chroma_data  
      EMBEDDING_MODEL: intfloat/multilingual-e5-base
    volumes:
      - ./logs:/app/logs
      - ./hf_cache:/root/.cache/huggingface 
      - ./chroma_data:/app/chroma_data
    command: python main.py
    ports:
      - "8000:8000"

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery
    restart: always
    user: appuser
    depends_on:
      - redis
      - postgres
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      CHROMA_DB_PATH: /app/chroma_data
      EMBEDDING_MODEL: intfloat/multilingual-e5-base
    volumes:
      - ./logs:/app/logs
      - ./hf_cache:/root/.cache/huggingface
      - ./chroma_data:/app/chroma_data
    command: celery -A src.services.worker worker -l info

volumes:
  postgres_data:
  hf_cache:
  chroma_data:
